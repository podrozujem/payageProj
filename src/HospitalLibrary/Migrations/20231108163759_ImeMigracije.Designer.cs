// <auto-generated />
using HospitalLibrary.Settings;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HospitalLibrary.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    [Migration("20231108163759_ImeMigracije")]
    partial class ImeMigracije
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("HospitalLibrary.Core.Model.Payment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<int>("CVV")
                        .HasColumnType("integer");

                    b.Property<string>("CardHolderNumber")
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<int>("ExpirationMonth")
                        .HasColumnType("integer");

                    b.Property<int>("ExpirationYear")
                        .HasColumnType("integer");

                    b.Property<string>("HolderName")
                        .HasColumnType("text");

                    b.Property<string>("OrderReference")
                        .HasColumnType("text");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("payments");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Amount = 10000.0,
                            CVV = 99,
                            CardHolderNumber = "09099980777",
                            Currency = "EUR",
                            ExpirationMonth = 9,
                            ExpirationYear = 2025,
                            HolderName = "Mika Mikic",
                            OrderReference = "Neka referenca",
                            PaymentStatus = 0
                        },
                        new
                        {
                            Id = "2",
                            Amount = 20900.0,
                            CVV = 123,
                            CardHolderNumber = "34776899909",
                            Currency = "RSD",
                            ExpirationMonth = 4,
                            ExpirationYear = 2024,
                            HolderName = "Pera Peric",
                            OrderReference = "Neka referenca",
                            PaymentStatus = 1
                        },
                        new
                        {
                            Id = "3",
                            Amount = 34999.0,
                            CVV = 456,
                            CardHolderNumber = "342221567899",
                            Currency = "EUR",
                            ExpirationMonth = 2,
                            ExpirationYear = 2025,
                            HolderName = "Ana Anic",
                            OrderReference = "Neka refernca",
                            PaymentStatus = 1
                        },
                        new
                        {
                            Id = "4",
                            Amount = 6000.0,
                            CVV = 234,
                            CardHolderNumber = "12345678999",
                            Currency = "EUR",
                            ExpirationMonth = 4,
                            ExpirationYear = 2025,
                            HolderName = "Milica Milic",
                            OrderReference = "Neka refernca",
                            PaymentStatus = 1
                        },
                        new
                        {
                            Id = "5",
                            Amount = 34999.0,
                            CVV = 987,
                            CardHolderNumber = "234567345",
                            Currency = "RSD",
                            ExpirationMonth = 6,
                            ExpirationYear = 2023,
                            HolderName = "Marko Markovic",
                            OrderReference = "Neka refernca",
                            PaymentStatus = 1
                        },
                        new
                        {
                            Id = "6",
                            Amount = 8999.0,
                            CVV = 456,
                            CardHolderNumber = "764434567",
                            Currency = "USD",
                            ExpirationMonth = 5,
                            ExpirationYear = 2025,
                            HolderName = "Toma Tomic",
                            OrderReference = "Neka refernca",
                            PaymentStatus = 2
                        },
                        new
                        {
                            Id = "7",
                            Amount = 44449.0,
                            CVV = 444,
                            CardHolderNumber = "55556666",
                            Currency = "RSD",
                            ExpirationMonth = 8,
                            ExpirationYear = 2024,
                            HolderName = "Sara Saric",
                            OrderReference = "Neka refernca",
                            PaymentStatus = 1
                        },
                        new
                        {
                            Id = "8",
                            Amount = 31200.0,
                            CVV = 124,
                            CardHolderNumber = "999999999",
                            Currency = "USD",
                            ExpirationMonth = 11,
                            ExpirationYear = 2026,
                            HolderName = "Ankica Anci",
                            OrderReference = "Neka refernca",
                            PaymentStatus = 0
                        },
                        new
                        {
                            Id = "9",
                            Amount = 36799.0,
                            CVV = 432,
                            CardHolderNumber = "8888888",
                            Currency = "RSD",
                            ExpirationMonth = 11,
                            ExpirationYear = 2026,
                            HolderName = "Elez Elezovic",
                            OrderReference = "Neka refernca",
                            PaymentStatus = 0
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<bool>("RequirePasswordChange")
                        .HasColumnType("boolean");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "manager@email.com",
                            Password = "password",
                            RequirePasswordChange = false,
                            Type = 2
                        },
                        new
                        {
                            Id = 2,
                            Email = "mihailoveljic3010@gmail.com",
                            Password = "password",
                            RequirePasswordChange = true,
                            Type = 3
                        });
                });

            modelBuilder.Entity("HospitalLibrary.Core.Model.Manager", b =>
                {
                    b.HasBaseType("HospitalLibrary.Core.Model.User");

                    b.HasDiscriminator().HasValue("Manager");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            Email = "jelena@gmail.com",
                            FirstName = "Jelena",
                            LastName = "Dinic",
                            Password = "1234",
                            RequirePasswordChange = false,
                            Type = 2
                        },
                        new
                        {
                            Id = 8,
                            Email = "jjj@gmail.com",
                            FirstName = "Neko",
                            LastName = "Blabla",
                            Password = "4321",
                            RequirePasswordChange = false,
                            Type = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
